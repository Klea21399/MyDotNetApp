trigger:
- main

pool:
  name: Default  # ose emri i agent pool-it qÃ« krijove, p.sh. DVO-KCANAJ

variables:
  - group: MyDotnetApp-Variables  # secrets & variables nga Library

steps:
- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet packages'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration Release'

- task: Docker@2
  displayName: 'Build & Push Docker image'
  inputs:
    command: 'buildAndPush'
    repository: '$(IMAGE_NAME)'
    containerRegistry: 'DockerRegistry11'  # Service connection me username/password
    dockerfile: '$(Build.SourcesDirectory)/MyDotnetApp/Dockerfile'
    tags: |
      $(Build.BuildId)

- task: AzureCLI@2
  displayName: 'Deploy to AKS via kubectl'
  inputs:
    azureSubscription: 'MyAzureConnection'
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      Write-Host "Logging into AKS cluster..."
      az aks get-credentials `
        --resource-group MyAppResourceGroup-Prod `
        --name MyAppAKS `
        --overwrite-existing

      Write-Host "Applying Kubernetes manifests from prod folder..."
      kubectl apply -f "$(Build.SourcesDirectory)/k8s/prod/"
