trigger:
  branches:
    include:
      - main
      - test

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  acrName: DockerRegistry11
  imageName: mydotnetapp

stages:
# ================================
# 1️⃣ BUILD & PUSH TO ACR
# ================================
- stage: Build
  displayName: "Build and Push Docker Image"
  jobs:
  - job: BuildJob
    steps:
    - checkout: self

    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.0.x'

    - task: Docker@2
      displayName: "Build and Push to ACR"
      inputs:
        containerRegistry: 'DockerRegistry11'   # Emri i Service Connection me ACR
        repository: $(imageName)
        command: buildAndPush
        Dockerfile: '**/Dockerfile'
        tags: |
          $(Build.BuildId)

# ================================
# 2️⃣ DEPLOY TO AKS
# ================================
- stage: Deploy
  displayName: "Deploy to AKS"
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: DeployJob
    steps:
    - checkout: self

    - task: AzureCLI@2
  displayName: 'AKS kubectl deploy to test'
  inputs:
    azureSubscription: 'MyAzureConnection'   # ← vendos emrin e saktë këtu
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az aks get-credentials --resource-group $(aksResourceGroup) --name $(aksClusterName) --overwrite-existing
      
          if [ "$(Build.SourceBranchName)" == "main" ]; then
            NAMESPACE="prod"
          else
            NAMESPACE="test"
          fi

          echo "Deploying to $NAMESPACE namespace..."
          kubectl apply -f k8s/deployment.yml -n $NAMESPACE
          kubectl apply -f k8s/service.yml -n $NAMESPACE

          echo "Deployment complete for branch $(Build.SourceBranchName)"
